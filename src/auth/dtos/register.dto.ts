import { ApiProperty } from '@nestjs/swagger';
import {
  IsEmail,
  IsEnum,
  IsNotEmpty,
  Matches,
  MinLength,
} from 'class-validator';
import { UserRole } from '../enums/user-role.enum';

/**
 * üìù DTO –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export class RegisterDto {
  @ApiProperty({
    example: 'user@example.com',
    description: 'Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
  })
  @IsEmail({}, { message: '–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π email' })
  email: string;

  @ApiProperty({
    example: 'Password123',
    description: '–ü–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
    minLength: 8,
  })
  @IsNotEmpty({ message: '–ü–∞—Ä–æ–ª—å —î –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–º' })
  @MinLength(8, { message: '–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –Ω–µ –º–µ–Ω—à–µ 8 —Å–∏–º–≤–æ–ª—ñ–≤' })
  @Matches(/^(?=.*[A-Z])(?=.*\d).{8,}$/, {
    message: '–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ —Ö–æ—á–∞ –± –æ–¥–Ω—É –≤–µ–ª–∏–∫—É –ª—ñ—Ç–µ—Ä—É —Ç–∞ —Ü–∏—Ñ—Ä—É',
  })
  password: string;

  @ApiProperty({
    example: 'recruiter',
    description: '–†–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (admin –∞–±–æ recruiter)',
    enum: UserRole,
  })
  @IsEnum(UserRole, { message: '–†–æ–ª—å –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ admin –∞–±–æ recruiter' })
  role: UserRole;
}
