import { Module } from '@nestjs/common';
import { ConfigModule } from '@nestjs/config';
import { MongooseModule } from '@nestjs/mongoose';
import { AuthModule } from './auth/auth.module';
import { BranchesModule } from './branches/branches.module';
import { CandidatesModule } from './candidates/candidates.module';
import { CitiesModule } from './cities/cities.module';
import { DatabaseModule } from './database/database.module';
import { IntegrationsModule } from './integrations/integrations.module';
import { StatusesModule } from './statuses/statuses.module';
import { UsersModule } from './users/users.module';

/**
 * üìå –û—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
 */
@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true, // ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
      validate: validateEnv, // üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    }),
    MongooseModule.forRoot(
      process.env.MONGO_URI || 'mongodb://localhost:27017/app',
    ), // ‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
    DatabaseModule,
    AuthModule,
    UsersModule,
    CitiesModule,
    BranchesModule,
    StatusesModule,
    IntegrationsModule,
    CandidatesModule,
  ],
})
export class AppModule {
  constructor() {
    console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞!');
  }
}

function validateEnv(env: Record<string, any>) {
  if (!env.MONGO_URI) {
    throw new Error('‚ùå MONGO_URI –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ .env —Ñ–∞–π–ª—ñ!');
  }
  if (!env.JWT_SECRET) {
    throw new Error('‚ùå JWT_SECRET –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ .env —Ñ–∞–π–ª—ñ!');
  }
  return env;
}
